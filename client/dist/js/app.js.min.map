{"version":3,"sources":["app.js"],"names":["factory","define","amd","_arrayLikeToArray","arr","len","length","i","arr2","Array","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","isArray","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","_unsupportedIterableToArray","F","s","done","value","e","f","TypeError","err","normalCompletion","didErr","step","next","return","fireSignal","triggerElement","srcElement","signal","containerElement","containerSelector","closest","includes","classList","remove","add","bindElements","id","console","warning","knownSignals","dataset","JSON","parse","find","item","warn","isBound","push","stringify","addEventListener","fireSignals","this","_step","_iterator","_loop","entry","document","getElementById","signals","forEach","applySignals","applySignal","elementForm","querySelector","MutationObserver","mutations","observer","_step2","_iterator2","mutation","type","attributeName","target","isChanged","contains","wasChanged","oldValue","split","nodeName","_step3","_iterator3","addedNodes","addedNode","observe","attributes","attributeOldValue","attributeFilter","subtree","childList","initElements","querySelectorAll","element","window","jQuery","fn","entwine","$","onmatch"],"mappings":"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","file":"app.js","sourcesContent":["(function (factory) {\n  typeof define === 'function' && define.amd ? define('app', factory) :\n  factory();\n}((function () { 'use strict';\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _createForOfIteratorHelper(o, allowArrayLike) {\n    var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n    if (!it) {\n      if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n        if (it) o = it;\n        var i = 0;\n\n        var F = function () {};\n\n        return {\n          s: F,\n          n: function () {\n            if (i >= o.length) return {\n              done: true\n            };\n            return {\n              done: false,\n              value: o[i++]\n            };\n          },\n          e: function (e) {\n            throw e;\n          },\n          f: F\n        };\n      }\n\n      throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n\n    var normalCompletion = true,\n        didErr = false,\n        err;\n    return {\n      s: function () {\n        it = it.call(o);\n      },\n      n: function () {\n        var step = it.next();\n        normalCompletion = step.done;\n        return step;\n      },\n      e: function (e) {\n        didErr = true;\n        err = e;\n      },\n      f: function () {\n        try {\n          if (!normalCompletion && it.return != null) it.return();\n        } finally {\n          if (didErr) throw err;\n        }\n      }\n    };\n  }\n\n  /**\n   * Inline Link mutation observer\n   * Use MutationObserver to detect when the link type selector changes\n   * See InlineLinkField.php for an example using data-signals attribute\n   */\n\n  /**\n   * fire a signal, triggered by the trigger element\n   * Depending on the results, the srcElement (or its container is shown/hidden)\n   */\n  var fireSignal = function fireSignal(triggerElement, srcElement, signal) {\n    // the container that will be applied\n    var containerElement = srcElement;\n\n    if (signal.containerSelector) {\n      // apply the container as the closest element\n      containerElement = srcElement.closest(signal.containerSelector);\n    } // value hit (based on OR)\n\n\n    var hit = signal.value.includes(triggerElement.value);\n\n    if (hit) {\n      containerElement.classList.remove('hidden');\n    } else {\n      // remove if set, add if not\n      containerElement.classList.add('hidden');\n    }\n\n    return;\n  };\n  /**\n   * Determine if the srcElement is bound to the triggerElement\n   */\n\n\n  var isBound = function isBound(triggerElement, srcElement) {\n    if (!triggerElement.dataset.knownSignals) {\n      return false;\n    } // knownSignals is a string\n\n\n    var knownSignals = JSON.parse(triggerElement.dataset.knownSignals);\n\n    try {\n      var exists = knownSignals.find(function (item) {\n        return item.id == srcElement.id;\n      });\n      return exists;\n    } catch (e) {\n      console.warn('isBound failed', e);\n      return false;\n    }\n  };\n  /**\n   * Bind the srcElement ot the triggerElement\n   * So that when the trigger Element change event is fired the signals from\n   * the src element are fired\n   */\n\n\n  var bindElements = function bindElements(triggerElement, srcElement) {\n    if (!srcElement.id) {\n      console.warning('srcElement must have an id attributes');\n      return false;\n    }\n\n    var knownSignals = [];\n\n    if (!triggerElement.dataset.knownSignals) {\n      triggerElement.dataset.knownSignals = '';\n    } else {\n      knownSignals = JSON.parse(triggerElement.dataset.knownSignals);\n    }\n\n    var isSrcBound = isBound(triggerElement, srcElement);\n\n    if (!isSrcBound) {\n      knownSignals.push({\n        id: srcElement.id\n      }); // save to the element\n\n      triggerElement.dataset.knownSignals = JSON.stringify(knownSignals); // bind the DOM event\n\n      triggerElement.addEventListener('change', function (e) {\n        // fire all signals on the event\n        fireSignals(this);\n      });\n    }\n  };\n  /**\n   * Fire all known signals on a trigger element in sequence\n   */\n\n\n  var fireSignals = function fireSignals(triggerElement) {\n    try {\n      var knownSignals = [];\n\n      if (triggerElement.dataset.knownSignals) {\n        knownSignals = JSON.parse(triggerElement.dataset.knownSignals);\n      }\n\n      if (knownSignals.length == 0) {\n        return;\n      } // fire each signal\n\n\n      var _iterator = _createForOfIteratorHelper(knownSignals),\n          _step;\n\n      try {\n        var _loop = function _loop() {\n          var entry = _step.value;\n          var srcElement = document.getElementById(entry.id);\n\n          if (!srcElement) {\n            console.warn('srcElement from entry.id does not exist:' + entry.id);\n          } else {\n            var signals = JSON.parse(srcElement.dataset.signals);\n            signals.forEach(function (signal) {\n              fireSignal(triggerElement, srcElement, signal);\n            });\n          }\n        };\n\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          _loop();\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    } catch (e) {\n      console.warn(e);\n    }\n  };\n  /**\n   * Apply signals from a src element\n   */\n\n\n  var applySignals = function applySignals(srcElement) {\n    try {\n      var signals = JSON.parse(srcElement.dataset.signals);\n      signals.forEach(function (signal) {\n        applySignal(srcElement, signal);\n      });\n    } catch (e) {\n      console.warn(e);\n    }\n  };\n  /**\n   * Apply a single signal from a src element\n   */\n\n\n  var applySignal = function applySignal(srcElement, signal) {\n    if (!srcElement.id) {\n      console.warn('srcElement must have an ID attribute value');\n      return false;\n    } // based on form element\n\n\n    var elementForm = srcElement.closest('form');\n\n    if (elementForm) {\n      var triggerElement = elementForm.querySelector('[name=\"' + signal.triggerElement + '\"]');\n\n      if (triggerElement) {\n        // fire the signal right away\n        fireSignal(triggerElement, srcElement, signal); // and bind the srcElement to the triggerElement\n\n        bindElements(triggerElement, srcElement);\n      } else {\n        console.warn('triggerElement not found: ' + signal.triggerElement);\n      }\n    } else {\n      console.warn('Elements outside of forms are not yet supported'); // todo: support changes on non-form elements\n    }\n  };\n  /**\n   * Add the Mutation Observer to the document\n   */\n\n\n  var addDocumentObserver = function addDocumentObserver() {\n    var documentObserver = new MutationObserver(function (mutations, observer) {\n      var _iterator2 = _createForOfIteratorHelper(mutations),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var mutation = _step2.value;\n\n          switch (mutation.type) {\n            case 'attributes':\n              if (mutation.attributeName == 'data-signals' || mutation.attributeName == 'data-init-signal') {\n                // initSignal in dataset triggers dataset.signals to be observed\n                // as it is in the list of attributes to observe\n                // push the rule onto the available signals\n                applySignals(mutation.target);\n              } else if (mutation.attributeName == 'class') {\n                // some elements add/remove a 'changed' class e.g chosen\n                var isChanged = mutation.target.classList.contains('changed');\n                var wasChanged = mutation.oldValue && mutation.oldValue.split(' ').includes('changed');\n\n                if (isChanged || wasChanged) {\n                  if (mutation.target.nodeName == 'SELECT') {\n                    // mutation.target is the triggerElement\n                    fireSignals(mutation.target);\n                  } else {\n                    console.warn('Ignoring changed class on: ' + mutation.target.nodeName);\n                  }\n                }\n              } else {\n                console.warn('Unhandled attribute: ' + mutation.attributeName);\n              }\n\n              break;\n\n            case 'childList':\n              // TODO\n              var _iterator3 = _createForOfIteratorHelper(mutation.addedNodes),\n                  _step3;\n\n              try {\n                for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                  var addedNode = _step3.value;\n\n                  try {\n                    if (addedNode.dataset && addedNode.dataset.signals) {\n                      applySignals(mutation.target);\n                    }\n                  } catch (e) {\n                    console.warn(e);\n                  }\n                }\n              } catch (err) {\n                _iterator3.e(err);\n              } finally {\n                _iterator3.f();\n              }\n\n              break;\n\n            default:\n              console.warn('documentObserver unhandled mutation type: ' + mutation.type);\n              break;\n          } //switch\n\n        } // for\n\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    } // function\n    ); // ckass\n    // observe the document + subtree for changes\n\n    documentObserver.observe(document, {\n      attributes: true,\n      // observe attributes\n      attributeOldValue: true,\n      attributeFilter: [\"class\", \"data-signals\"],\n      // restrict mutation check\n      subtree: true,\n      // observer subtree under document\n      childList: false // do not observe child nodes (for now)\n\n    });\n  }; // start\n\n\n  addDocumentObserver(); // provide a callback to trigger initiation\n\n  var initElements = function initElements() {\n    var elements = document.querySelectorAll('[data-signals]');\n    elements.forEach(function (element) {\n      // trigger a mutation\n      var signals = element.dataset.signals;\n      element.dataset.signals = signals;\n    });\n  }; // handle initial DOMContentLoaded\n\n\n  window.document.addEventListener('DOMContentLoaded', function () {\n    initElements();\n  }); // integrate with entwine, if available\n\n  if (typeof window.jQuery != 'undefined' && window.jQuery.fn.entwine) {\n    window.jQuery.entwine('ss', function ($) {\n      $('.cms-edit-form').entwine({\n        onmatch: function onmatch() {\n          initElements();\n        }\n      });\n    });\n  }\n\n})));\n"]}